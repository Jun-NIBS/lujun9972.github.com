#+TITLE: tload:字符界面上的图形化系统负载监控工具
#+AUTHOR: lujun9972
#+TAGS: linux和它的小伙伴
#+DATE: [2018-10-26 五 17:36]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

tload是一款很酷的系统负载监控工具，它使用字符来组成柱状图以图形化的方式来显示最近一段时间内的系统负载

tload的运行结果类似下面这样:

#+BEGIN_EXAMPLE
#+END_EXAMPLE
#+BEGIN_EXAMPLE

  ------------------------------------- 

                       ,*  
                       ,**
  --------------------====------------- 
      ,**             ******   **
     ,******         *************
    ,*********       **************    *
  --=========-------==============-----=
  ,*************************************
  ,*************************************
  ,*************************************
#+END_EXAMPLE

它的第一行是前1分钟，5分钟，15分钟的系统负载(即:单位时间段内CPU活动进程数)

它的后面就是不断刷新(刷新频率可以用-d来设置)的系统负载图，其中这个图形是由 ~*~, ~-~ 和 ~=~ 三种字符组成的，其中:

+ ~*~ 组成的列表示系统的负载
+ ~-~ 表示的是负载为1的高度,这个值可以通过 =-s= 选项来设定1负载用多高的字符列来表示
+ 当实际负载超过 ~-~ 所展示的负载时，会使用 ~=~ 来代替 ~-~

因此要给上面的图案加上标杆的话大概是这样的
#+BEGIN_EXAMPLE
  ------------------------------------- load 3

                       ,*  
                       ,**
  --------------------====------------- load 2
      ,**             ******   **
     ,******         *************
    ,*********       **************
  --=========-------==============----- load 1
  ,*************************************
  ,*************************************
  ,************************************* load 0
#+END_EXAMPLE
