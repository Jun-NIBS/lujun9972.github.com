#+TITLE: 创建无法用cat显示的文件
#+AUTHOR: lujun9972
#+TAGS: linux和它的小伙伴
#+DATE: [2018-04-07 六 12:04]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

* clear清屏的原理

=clear= 命令实际上是输出的是下面这样一个字符序列
#+BEGIN_SRC org
[3J[H[J
#+END_SRC

通过下面命令可以很容易地看出这点。
#+BEGIN_EXAMPLE
  [lujun9972@T520 ~]$ clear |od -x
  0000000 5b1b 4a33 5b1b 1b48 325b 004a
  0000013
#+END_EXAMPLE

事实上，具体输出哪个字符串序列是clear命令根据终端的类型在terminfo数据库中找出来的，也就是不同终端输出的序列是不一样的。

但有一点是一样的，就是当在终端输出这么一串字符序列时，终端实际上做的是刷新屏幕的动作，而具体这个字符串序列是通过什么方式来输出则无关紧要。

也就是说，你可以把这个字符序列存在变量中,然后echo这个变量，
#+BEGIN_SRC shell
  cls=$(clear)
  echo $cls
#+END_SRC

也可以把这个字符串序列存入文件中，然后cat这个文件，
#+BEGIN_SRC shell
  clear>/tmp/cls.txt
  cat /tmp/cls.txt
#+END_SRC

都能产生刷新的效果。

* reset的清屏原理
reset的原理跟clear类似，所不同之处在于reset是将字符串序列输出到stderr中，而且输出的字符串序列跟clear输出的也不一样。

所以，你也可以把这个字符序列存在变量中,然后echo这个变量，
#+BEGIN_SRC shell
  reset=$(reset 2>&1)
  echo $reset
#+END_SRC

或者把这个字符串序列存入文件中，然后cat这个文件，
#+BEGIN_SRC shell
  reset 2>/tmp/reset.txt
  cat /tmp/reset.txt
#+END_SRC

来产生清除屏幕的效果.

* 让文件无法用cat显示
假设我们有一个文件 =/tmp/1.txt=

#+BEGIN_SRC shell
  FILE="/tmp/1.txt"
  >$FILE
  for n in $(seq 1 10);do
      echo "line$n" >>$FILE
  done
#+END_SRC


它的内容是:
#+BEGIN_SRC shell :results org
  cat /tmp/1.txt
#+END_SRC

#+BEGIN_SRC org
line1
line2
line3
line4
line5
line6
line7
line8
line9
line10
#+END_SRC

我们在每行后面加上刷屏序列(或者清屏序列)
#+BEGIN_SRC shell
  sed -i 's/$/'"$(clear)"'/' /tmp/1.txt 
#+END_SRC

#+RESULTS:

这样当你用head/tail/cat之类的命令来显示文件时会发现屏幕被刷新了，没有新的内容显示出来。
(如果你加的是清屏序列的话，会发现之前的内容都被清除掉了)

你可以把它封装成一个函数
#+BEGIN_SRC shell
  function hide()
  {
      local file
      for file in "$@";do
          sed -i 's/$/'"$(clear)"'/' $file
      done
  }
#+END_SRC

如果要显示的话，也很容易，直接用sed把每行最后的11个字符删掉就行了
#+BEGIN_SRC shell
  sed 's/.\{10\}$//' /tmp/1.txt
#+END_SRC

#+RESULTS:
| line1  |
| line2  |
| line3  |
| line4  |
| line5  |
| line6  |
| line7  |
| line8  |
| line9  |
| line10 |

你也可以把它封装成一个函数
#+BEGIN_SRC shell
  function show()
  {
      local file
      for file in "$@";do
          sed 's/.\{10\}$//' $file
      done
  }

  function unhide()
  {
      local file
      for file in "$@";do
          sed -i 's/.\{10\}$//' $file
      done
  }
#+END_SRC


不过如果你用vi打开的话，还是能看到里面的内容的.
[[file:./images/screenshot-34.png]]
